buildscript {
    ext.kotlin_version = '1.2.71'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io'}
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.intellij' version '0.3.4'
    id "org.jetbrains.grammarkit" version "2018.2"
}

group 'com.interfaced'
version '0.1.0'

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.grammarkit'

sourceSets {
    all {
        java.srcDirs += ['src/main/gen']
        kotlin.srcDirs += ['src/main/kotlin']
        resources.srcDirs = ['src/main/resources']
    }
}

sourceCompatibility = 1.8

grammarKit {
    jflexRelease = '1.7.0'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

intellij {
    plugins = ['PsiViewer:183.2153']
    pluginName 'BrightScript'

}

patchPluginXml {
    changeNotes """
      .brs files
      """
}

import org.jetbrains.grammarkit.tasks.*

def GENERATE_GROUP = 'Generate'

task generateLexer(type: GenerateLexer) {
    source = "src/main/grammar/BrightScript.flex"
    targetDir = "src/main/gen/com/interfaced/brs/lang/lexer"
    targetClass = "_BrsLexer"
    skeleton = "src/main/grammar/idea-flex.skeleton"
    purgeOldFiles = true

    description = 'Generate Lexer Java sources for BrightScript'
    group = GENERATE_GROUP
}

task generateParser(type: GenerateParser) {
    source = "src/main/grammar/BrightScript.bnf"
    targetRoot = 'src/main/gen'
    pathToParser = 'src/main/gen/com/interfaced/brs/lang/BrsParser.java'
    pathToPsiRoot = 'src/main/gen/com/interfaced/brs/lang/psi'
    purgeOldFiles = true

    description = 'Generate Parser Java sources for BrightScript'
    group = GENERATE_GROUP

    // patch up to date check
    outputs.upToDateWhen { false }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileKotlin.dependsOn(generateLexer, generateParser)